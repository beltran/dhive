# Use lower case for the variable names!
# The way jinja2 works forces to do this atm

[global]
mysql_connector_version = 5.1.46

hadoop_version = 3.2.0-SNAPSHOT

hive_version = 4.0.0-SNAPSHOT
tez_version = 0.10.0-SNAPSHOT

hive_path = /Users/jmarhuenda/workspace/hive
tez_path = /Users/jmarhuenda/workspace/tez


[core]

# Getting weird error: ERROR ApiServiceClient: User: yarn/rm.example.com@EXAMPLE.COM is not allowed to impersonate dr.who
hadoop.proxyuser.yarn.hosts = *
hadoop.proxyuser.yarn.groups = *
hadoop.http.staticuser.user = hive

[hdfs]

[yarn]

yarn.webapp.api-service.enable = true

[tez]
tez.am.resource.memory.mb = 256

[hive]

hive.server2.enable.doAs = true
hive.warehouse.subdir.inherit.perms = false

hadoop.bin.path=/hadoop/bin/hadoop
hadoop.conf.path=/hadoop/etc/hadoop/

hive.execution.mode = llap
hive.llap.execution.mode = all
hive.llap.daemon.service.hosts = @dhive-llap

hive.llap.daemon.work.dirs = /user/hive/tmp/scratchdir
hive.llap.daemon.keytab.file = /var/keytabs/hdfs.keytab
hive.llap.daemon.service.principal = hive/_HOST@EXAMPLE.COM
hive.llap.daemon.service.ssl = false

# hadoop.security.authentication = kerberos
# hadoop.security.authorization = true

# hive.llap.zk.sm.principal =
# hive.llap.zk.sm.keytab.file = /var/keytabs/hdfs.keytab
hive.llap.zk.sm.connectionString = zk1.example.com


hive.zookeeper.quorum = zk1.example.com
hive.cluster.delegation.token.store.zookeeper.connectString = zk1.example.com:2181

hive.zookeeper.client.port = 2181

[hivemetastore]

hive.security.metastore.authorization.manager = org.apache.hadoop.hive.ql.security.authorization.StorageBasedAuthorizationProvider
hive.security.metastore.authenticator.manager = org.apache.hadoop.hive.ql.security.HadoopDefaultMetastoreAuthenticator
hive.metastore.pre.event.listeners = org.apache.hadoop.hive.ql.security.authorization.AuthorizationPreEventListener
hive.metastore.execute.setugi = true

hive.warehouse.subdir.inherit.perms = true
# hive.users.in.admin.role = hive,hive_meta

hive.stats.column.autogather = true
hive.insert.into.multilevel.dirs = true

[services]
# Order is important
# The module file will be kerberos.yml, hadoop.yml, ...
services = kerberos,hadoop,yarn,tez,mysql,hive-meta,hive,llap,zookeeper
