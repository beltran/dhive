version: "2"
services:
  kerberos:
    container_name: kerberos.example
    hostname: kerberos.example.com
    entrypoint: /start-kdc.sh
    build:
      context: .
      args:
        - http_proxy
        - https_proxy
    volumes:
      - server-keytab:/var/keytabs

  nn:
    ports:
      - 9000:9000
    container_name: nn.example
    hostname: nn.example.com
    user: hdfs
    entrypoint: /start-namenode.sh
    build:
      context: .
      args:
        - http_proxy
        - https_proxy
    volumes:
      - server-keytab:/var/keytabs
      - /hadoop

  dn1:
    container_name: dn1.example
    hostname: dn1.example.com
    user: hdfs
    entrypoint: /start-datanode.sh
    build:
      context: .
      args:
        - http_proxy
        - https_proxy
    volumes:
      - server-keytab:/var/keytabs

  rm:
    ports:
      - 8031:8031
    container_name: rm.example
    hostname: rm.example.com
    user: hdfs
    entrypoint: /start-resourcemanager.sh
    build:
      context: .
      args:
        - http_proxy
        - https_proxy
    volumes:
      - server-keytab:/var/keytabs
      - /hadoop

  nm:
    container_name: nm1.example
    hostname: nm1.example.com
    user: hdfs
    entrypoint: /start-nodemanager.sh
    build:
      context: .
      args:
        - http_proxy
        - https_proxy
    volumes:
      - server-keytab:/var/keytabs
      - /hadoop

  data-populator:
    container_name: data-populator.example
    hostname: data-populator.example.com
    user: hdfs
    entrypoint: /populate-data.sh
    build:
      context: .
      args:
        - http_proxy
        - https_proxy
    volumes:
      - server-keytab:/var/keytabs

  run-install-tez-job:
    container_name: run-tez.example
    hostname: run-tez.example.com
    user: hdfs
    entrypoint: /run-and-install-tez.sh
    build:
      context: .
      args:
        - http_proxy
        - https_proxy
    volumes:
      - server-keytab:/var/keytabs

networks:
  default:
    external:
      name: com

volumes:
  server-keytab:
